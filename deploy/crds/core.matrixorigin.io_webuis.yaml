---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: webuis.core.matrixorigin.io
spec:
  group: core.matrixorigin.io
  names:
    kind: WebUI
    listKind: WebUIList
    plural: webuis
    singular: webui
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WebUI  is a resource that represents a set of MO's webui instances
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          deps:
            description: Deps is the dependencies of WebUI
            properties:
              cnset:
                description: The WebUI it depends on
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of WebUI
            properties:
              clusterDomain:
                description: |-
                  ClusterDomain is the cluster-domain of current kubernetes cluster,
                  refer https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/ for details
                type: string
              config:
                description: Config is the raw config for pods
                type: string
              dnsBasedIdentity:
                description: |-
                  If enabled, use the Pod dns name as the Pod identity
                  Deprecated: DNSBasedIdentity is barely for keeping backward compatibility
                type: boolean
              exportToPrometheus:
                description: ExportToPrometheus enables the pod to be discovered scraped
                  by Prometheus
                type: boolean
              image:
                description: Image is the docker image of the main container
                type: string
              imagePullPolicy:
                description: PullPolicy describes a policy for if/when to pull a container
                  image
                type: string
              memoryLimitPercent:
                description: |-
                  MemoryLimitPercent is percent used to set GOMEMLIMIT env, its value must be in interval (0, 100].
                  GOMEMLIMIT = limits.memory * MemoryLimitPercent / 100
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              operatorVersion:
                description: |-
                  OperatorVersion is the controller version of mo-operator that should be used to
                  reconcile this set
                type: string
              overlay:
                x-kubernetes-preserve-unknown-fields: true
              promDiscoveryScheme:
                description: |-
                  PromDiscoveryScheme indicates how the Pod will be discovered by prometheus, options:
                  - Pod: the pod will be discovered via will-known labels on the Pod
                  - Service: the pod will be discovered via will-known annotations in the service which expose endpoints to the pods
                  default to Service
                type: string
              replicas:
                description: Replicas is the desired number of pods of this set
                format: int32
                type: integer
              resources:
                description: Resources is the resource requirement of the main conainer
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              semanticVersion:
                description: |-
                  SemanticVersion override the semantic version of CN if set,
                  the semantic version of CN will be default to the image tag,
                  if the semantic version is not set, nor the image tag is a valid semantic version,
                  operator will treat the MO as unknown version and will not apply any version-specific
                  reconciliations
                type: string
              serviceArgs:
                description: |-
                  ServiceArgs define command line options for process, used by logset/cnset/dnset service.
                  NOTE: user should not define "-cfg" argument in this field, which is defined default by controller
                items:
                  type: string
                type: array
              serviceType:
                default: ClusterIP
                description: ServiceType is the service type of cn service
                enum:
                - ClusterIP
                - NodePort
                - LoadBalancer
                type: string
              topologySpread:
                description: |-
                  TopologyEvenSpread specifies what topology domains the Pods in set should be
                  evenly spread in.
                  This will be overridden by .overlay.TopologySpreadConstraints
                items:
                  type: string
                type: array
              updateStrategy:
                description: UpdateStrategy rolling update strategy
                properties:
                  maxSurge:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      MaxSurge is an optional field that specifies the maximum number of Pods that
                      can be created over the desired number of Pods.
                    x-kubernetes-int-or-string: true
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      MaxUnavailable an optional field that specifies the maximum number of Pods that
                      can be unavailable during the update process.
                    x-kubernetes-int-or-string: true
                type: object
            type: object
          status:
            properties:
              availableStores:
                items:
                  properties:
                    lastTransition:
                      format: date-time
                      type: string
                    phase:
                      type: string
                    podName:
                      type: string
                  type: object
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failedStores:
                items:
                  properties:
                    lastTransition:
                      format: date-time
                      type: string
                    phase:
                      type: string
                    podName:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
