---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: logsets.core.matrixorigin.io
spec:
  group: core.matrixorigin.io
  names:
    kind: LogSet
    listKind: LogSetList
    plural: logsets
    singular: logset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A LogSet is a resource that represents a set of MO's LogService
          instances
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of LogSet
            properties:
              clusterDomain:
                description: ClusterDomain is the cluster-domain of current kubernetes
                  cluster, refer https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
                  for details
                type: string
              config:
                description: Config is the raw config for pods
                type: string
              dnsBasedIdentity:
                description: If enabled, use the Pod dns name as the Pod identity
                type: boolean
              exportToPrometheus:
                type: boolean
              failedPodStrategy:
                description: FailedPodStrategy controls how to handle failed pod when
                  failover happens, default to Delete
                type: string
              image:
                description: Image is the docker image of the main container
                type: string
              initialConfig:
                description: InitialConfig is the initial configuration of HAKeeper
                  InitialConfig is immutable
                properties:
                  dnShards:
                    description: DNShards is the initial number of DN shards, cannot
                      be tuned after cluster creation currently. default to 1
                    type: integer
                  logShardReplicas:
                    description: LogShardReplicas is the replica numbers of each log
                      shard, cannot be tuned after cluster creation currently. default
                      to 3 if LogSet replicas >= 3, to 1 otherwise
                    type: integer
                  logShards:
                    description: LogShards is the initial number of log shards, cannot
                      be tuned after cluster creation currently. default to 1
                    type: integer
                  restoreFrom:
                    description: RestoreFrom declares the HAKeeper data should be
                      restored from the given path when hakeeper is bootstrapped
                    type: string
                type: object
              memoryLimitPercent:
                description: MemoryLimitPercent is percent used to set GOMEMLIMIT
                  env, its value must be in interval (0, 100]. GOMEMLIMIT = limits.memory
                  * MemoryLimitPercent / 100
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              overlay:
                x-kubernetes-preserve-unknown-fields: true
              pvcRetentionPolicy:
                description: 'PVCRetentionPolicy defines the retention policy of orphaned
                  PVCs due to cluster deletion, scale-in or failover. Available options:
                  - Delete: delete orphaned PVCs - Retain: keep orphaned PVCs, if
                  the corresponding Pod get created again (e.g. scale-in and scale-out,
                  recreate the cluster), the Pod will reuse the retained PVC which
                  contains previous data. Retained PVCs require manual cleanup if
                  they are no longer needed. The default policy is Delete.'
                type: string
              replicas:
                description: Replicas is the desired number of pods of this set
                format: int32
                type: integer
              resources:
                description: Resources is the resource requirement of the main conainer
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceArgs:
                description: 'ServiceArgs define command line options for process,
                  used by logset/cnset/dnset service. NOTE: user should not define
                  "-cfg" argument in this field, which is defined default by controller'
                items:
                  type: string
                type: array
              sharedStorage:
                description: SharedStorage is an external shared storage shared by
                  all LogService instances
                properties:
                  fileSystem:
                    description: FileSystem specified a fileSystem path as the shared
                      storage provider, it assumes a shared filesystem is mounted
                      to this path and instances can safely read-write this path in
                      current manner.
                    properties:
                      path:
                        description: Path the path that the shared fileSystem mounted
                          to
                        type: string
                    required:
                    - path
                    type: object
                  s3:
                    description: S3 specifies an S3 bucket as the shared storage provider,
                      mutual-exclusive with other providers.
                    properties:
                      certificateRef:
                        description: CertificateRef allow specifies custom CA certificate
                          for the object storage
                        properties:
                          files:
                            description: cert files in the secret
                            items:
                              type: string
                            type: array
                          name:
                            description: secret name
                            type: string
                        required:
                        - files
                        - name
                        type: object
                      endpoint:
                        description: Endpoint is the endpoint of the S3 compatible
                          service default to aws S3 well known endpoint
                        type: string
                      path:
                        description: Path is the s3 storage path in <bucket-name>/<folder>
                          format, e.g. "my-bucket/my-folder"
                        type: string
                      region:
                        description: Region of the bucket the default region will
                          be inferred from the deployment environment
                        type: string
                      s3RetentionPolicy:
                        description: S3RetentionPolicy defines the retention policy
                          of orphaned S3 bucket storage
                        enum:
                        - Delete
                        - Retain
                        type: string
                      secretRef:
                        description: Credentials for s3, the client will automatically
                          discover credential sources from the environment if not
                          specified
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      type:
                        description: 'S3ProviderType is type of this s3 provider,
                          options: [aws, minio] default to aws'
                        type: string
                    required:
                    - path
                    type: object
                type: object
              storeFailureTimeout:
                description: StoreFailureTimeout is the timeout to fail-over the logset
                  Pod after a failure of it is observed
                type: string
              topologySpread:
                description: TopologyEvenSpread specifies what topology domains the
                  Pods in set should be evenly spread in. This will be overridden
                  by .overlay.TopologySpreadConstraints
                items:
                  type: string
                type: array
              volume:
                description: Volume is the local persistent volume for each LogService
                  instance
                properties:
                  memoryCacheSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'Deprecated: use SharedStorageCache instead'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Size is the desired storage size of the volume
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storageClassName:
                    description: StorageClassName reference to the storageclass of
                      the desired volume, the default storageclass of the cluster
                      would be used if no specified.
                    type: string
                type: object
            required:
            - replicas
            - sharedStorage
            - volume
            type: object
          status:
            description: 'TODO: figure out what status should be exposed'
            properties:
              availableStores:
                items:
                  properties:
                    lastTransition:
                      format: date-time
                      type: string
                    phase:
                      type: string
                    podName:
                      type: string
                  type: object
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              discovery:
                properties:
                  address:
                    type: string
                  port:
                    format: int32
                    type: integer
                type: object
              failedStores:
                items:
                  properties:
                    lastTransition:
                      format: date-time
                      type: string
                    phase:
                      type: string
                    podName:
                      type: string
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
