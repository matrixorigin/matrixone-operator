name: build_image
description: "test multi platform build"
inputs:
  platforms:
    description: 'build platform, multiple platforms are separated by comma'
    required: true

runs:
  using: "composite"

  steps:
    # TODO(aylei): use native runner for arm64 when multi-arch is not required
    - name: setup QEMU
      if: ${{ inputs.platforms != 'linux/amd64' }}
      uses: docker/setup-qemu-action@master
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ inputs.platforms }}

    - name: setup docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: cache docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: build image
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: Dockerfile
        platforms: ${{ inputs.platforms }}
        push: false
        tags: "latest"
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        outputs: type=oci,dest=/tmp/matrixone-operator.tar

    - name: upload image artifact
      if: ${{ inputs.platforms == 'linux/amd64' }}
      uses: actions/upload-artifact@v2
      with:
        name: matrixorigin
        path: /tmp/matrixone-operator.tar

    # workaround https://github.com/docker/build-push-action/issues/252
    - name: move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
