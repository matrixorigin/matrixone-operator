name: e2e

on:
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    name: e2e_tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Import environment variables from file
        run: |
          cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '${{ env.golang-version }}'

      - name: Build images
        run: |
          export SHELL=/bin/bash
          docker build -f  ./images/operator/Dockerfile . -t matrixorigin/matrixone-operator:latest
          docker pull matrixorigin/matrixone:kc-0.3.0

      - name: start KinD
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.kind-version }}
          image: ${{ env.kind-image }}
          wait: 300s
          config: /test/kind-config.yml

      - name:  Wait for cluster to finish bootstraping
        run: |
          kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=300s
          kubectl cluster-info
          kubectl get pods -A

      - name: Load images
        run: |
          kind load docker-image matrixorigin/matrixone-operator:latest
          kind load docker-image matrixorigin/matrixone:kc-0.3.0
          kubectl apply -f test/kind-rbac.yml

      - name: Deploy Operator
        run: |
          make deploy

      - name: Wait for operator to finish bootstraping
        run: |
            kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout 300s
            kubectl cluster-info
            kubectl get pods -A

      - name: Deploy cluster
        run: |
          kubectl apply -f examples/tiny-cluster.yaml

      - name: Wait for pv
        uses: juliangruber/sleep-action@v1
        with:
          time: 120s

      - name: Wait for mo cluster to finish bootstraping
        run: |
            kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout 300s
            kubectl cluster-info
            kubectl get pods -A

      - name: Run test
        run:  |
          kubectl run bvt-tester --image=matrixorigin/mysql-tester -i --rm --restart=Never -- -host mo.default.svc.cluster.local -port  6001 -user dump -passwd 111

    # Added to summarize the matrix and allow easy branch protection rules setup
  e2e-tests-results:
    name: End-to-End Test Results
    if: always()
    needs:
      - e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        if: needs.e2e-tests.result == 'success'
        run: exit 0
      - name: Mark the job as a failure
        if: needs.e2e-tests.result != 'success'
        run: exit 1
